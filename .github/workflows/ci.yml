name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DEPLOY_TARGET: ${{ vars.DEPLOY_TARGET }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run build
        run: npm run build

  deploy-vercel:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ vars.DEPLOY_TARGET == 'vercel' && secrets.VERCEL_TOKEN != '' && secrets.VERCEL_PROJECT_ID != '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-args: "--prod"

  deploy-netlify:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ vars.DEPLOY_TARGET == 'netlify' && secrets.NETLIFY_AUTH_TOKEN != '' && secrets.NETLIFY_SITE_ID != '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: ./dist
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deployed by GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: false
          overwrites-pull-request-comment: false
          netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          netlify-site-id: ${{ secrets.NETLIFY_SITE_ID }}
